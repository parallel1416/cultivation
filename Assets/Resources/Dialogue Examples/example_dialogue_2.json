// 本文件夹中的所有文件仅供JSON格式参考，且由于带有注释，无法被Unity直接识别和使用。
// 完成事件文件写作后，请删除可能存在的注释，并将其放置在以下目录：Assets/Resources/Dialogues/
// 如果文本编辑器针对注释报错，请将编辑器的语言模式切换为“JSONC”或“JSON with Comments”。
// 事件文件名就是这个事件的唯一ID，建议使用英文和下划线命名法（例如 manage_the_family_estate.json），以避免潜在的编码问题。



{
    // 事件标题，可以留空或删除——此时将不会播放标题，而是直接进入正文。
    "title": "事件标题",
    "desc": "这是事件的简短描述，将会在事件列表中显示。",

    // 本事件可以分配的骰子(弟子)上限。
    // 可以留空，或删除此行——此时将默认为0，适合没有战斗参与的和平剧情事件。
    // 数字不带引号，带引号或写成非数字形式会报错，可能导致无法正常加载事件文件，或此项被视为0。
    "diceLimit": 2,

    // 本事件是否立刻触发并弹出剧情窗口。
    // 如果设置为false，则将其加入队列并在回合结束时触发，例如战斗事件和派遣事件。
    // 可以留空，或删除此行——此时将默认为true。
    // 布尔值 (true 或 false) 不带引号，带引号或写成非布尔形式会报错，可能导致无法正常加载事件文件，或此项被视为true。
    "triggersImmediately": true,

    // 本事件是否为主要事件。
    // 主要事件（例如宗门大比）将会锁定下一回合按钮，并提醒玩家必须先处理主要事件（例如，至少分配1颗骰子）
    // 布尔值 (true 或 false) 不带引号，带引号或写成非布尔形式会报错，可能导致无法正常加载事件文件，或此项被视为true。
    "major": false,



    // 事件的所有语句
    "sentences": [
        {
            // 这句话的唯一ID，可选。
            // 如果不需要从事件的其他地方跳转到这个句子，可以留空或删除此行。
            "id": "sentence_1",

            // 这个语句的类型。
            // 可选，默认类型为简单播放（default或留空）。
            // 留空或删除本字段则默认为简单播放。
            // 共有 4 种类型：
            // default - 简单播放句子。
            // choice - 选择句型，玩家可以从多个选项中选择一个，以决定后续走向。
            // check - 检定句型，玩家需要进行一次各种类型的检定，以决定后续走向。
            // multicheck - 多重检定句型，玩家需要进行多次各种类型的检定，根据具体情况决定后续走向。
            "type": "default",

            // 说话人名称，可选。
            // 对话的最终输出格式为：
            // 说话人名称：“对话内容”
            // 例如：
            // 掌门：“你醒啦。”

            // 如果需要显示旁白，可以留空或删除此行。
            // 旁白将不会显示说话人名称，也不会在对话文本外加上全角引号。
            // 例如：
            // 你醒了，但不知自己身在何处。

            "speaker": "说话人",

            // 这句话的文本内容。
            // 如果需要换行，请使用\n表示换行符；但更建议直接写一个新的语句，除非的确有视觉表现需要。（例如一首需要一次展示完成的诗歌）。
            // 暂时没有做对齐功能，若有需要请联系我。
            "text": "这是第一句话的内容。",

            // 指向某一句的id，本句播放完成后会直接跳转过去。
            // 可选，如果不需要跳转，可以留空或删除此行。此时将按顺序播放下一句。(最常见的情况)
            "target": "sentence_3" 
        },
        {
            // 所有的字段均可选，都可以留空或删除。留空或删除后的默认情况请参考各个字段的分别说明。
            // 如果在写一个简单且只有旁白的顺序播放剧情，实际上只需要"text"字段即可。
            "text": "这是第二句话的内容。"
        },
        {
            // 如上，第一句结束后会跳转到此，忽略第二句。
            "id": "sentence_3",

            "text": "第一句话结束后，会跳过第二句话并跳转到此处。"
        },



        {
            // 选择语句句型，用于让玩家做出选择。
            "type": "choice",

            // 选择题的问题文本。
            // 可以留空或删除，此时将会直接播放选项。
            // 以下两个操作：“保留此项”与“留空或删除此项，并在此前增加一个简单播放语句用来描述问题”在显示效果上是等价的。
            "question": "这是一个选择题，你想做什么？",

            // 选择题的所有选项。
            "choices": [
                {
                    // 选项文本内容。
                    // 不要留空或删除，玩家需要点击UI中的选项文本来进行选择。
                    "text": "你想选选项一。",

                    // 选中此选项后跳转到的句子ID。
                    // 不要留空或删除，否则将会报错并进行顺序播放以代替。
                    // 请不要忘记在事件的其余部分添加这些ID对应的句子，找不到跳转目标将会报错，并进行顺序播放以代替。
                    "target": "option_1_target"
                },
                {
                    "text": "选项二看起来也不错。",
                    "target": "option_2_target"
                },
                {
                    "text": "还是选选项三吧。",
                    "target": "option_3_target"
                }
            ]
        },
        {
            // 这是选项一会跳转到的语句。
            // 理论上不需要紧接在选择语句之后，可以在事件的任何位置编写。
            "id": "option_1_target",
            "text": "你选择了选项一。"
        },
        {
            // 这是选项二会跳转到的语句。
            "id": "option_2_target",
            "text": "你选择了选项二。"
        },
        {
            // 这是选项三会跳转到的语句。
            "id": "option_3_target",
            "text": "你选择了选项三。"
        },



        {
            // (单次)检定语句句型，用于让玩家进行一次检定。
            "type": "check",
            
            // 是否输出检定结果描述，设置为false来制造“暗骰”。
            // 同时对单次检定语句和多重检定语句生效。在多重检定语句中，该字段会同时决定所有检定是否显示。
            // 布尔型不带引号。
            "showCheckResult": true,

            // 检定条件。
            "checkCondition": {
                // 检定难度等级（DC）。
                // 数字不带引号，带引号或写成非数字形式会报错，可能导致无法正常加载事件文件，或此项被视为0。
                // 留空或删除此行则默认DC为0。
                "difficultyClass": 10,

                // 检定内容，决定使用哪种属性进行检定。
                // 可选值有：
                // diceroll - 骰子检定，根据已经挂载到事件的弟子骰子和消耗性道具进行检定。
                // money - “金钱”检定，根据当前拥有的灵石（如果这就是基础资源的称呼的话）数进行检定。
                // tech - 科技检定，需要指定科技ID（见下一个语句示例），并检查其是否解锁。
                // globaltag - 全局标签检定，需要指定标签ID（见下下一个语句示例），并检查其激活状态。
                // 写成其它单词会报错并使得检定结果默认为0。
                // 需要其它检定条件请联系我。
                "checkWhat": "diceroll"
            },

            // 检定成功后跳转到的句子ID。
            // 不要留空或删除，或者写错跳转目标，否则将会报错并进行顺序播放以代替。
            "successTarget": "check_success_target",

            // 检定失败后跳转到的句子ID。
            // 不要留空或删除，或者写错跳转目标，否则将会报错并进行顺序播放以代替。
            "failureTarget": "check_failure_target"
        },
        {
            // 这是检定成功后会跳转到的语句。
            // 理论上不需要紧接在检定语句之后，可以在事件的任何位置编写。
            "id": "check_success_target",
            "text": "你成功通过了检定！"
        },
        {
            // 这是检定失败后会跳转到的语句。
            "id": "check_failure_target",
            "text": "你未能通过检定。"
        },



        {
            // 这是一个科技检定的示例。
            "type": "check",

            // DC字段在科技检定中没有意义，它将会被锁定为1。
            // "difficultyClass": 2025, -> 实际：1
            
            "checkCondition": {
                "checkWhat": "tech",

                // 科技ID，必须是TechTree.json中存在的科技ID。
                // 不要留空或删除，或者填写错误的科技ID，否则将会报错，并使得检定结果默认为“未解锁”。
                // 此处代表需要检测“初入山门”科技是否解锁。（见TechTree.json）
                // 请注意此处是 stringId 而非 techId，这个字段将会和针对 globaltag 的检定类型共用。
                // 注意大小写。
                "stringId": "story_1" 
            }
            // 成功和失败跳转不再赘述，请参考上一个语句示例。实际写作中不要忘记这个部分！
        },



        {
            // 这是一个全局标签检定的示例。
            "type": "check",

            // DC字段在全局标签检定中没有意义，它将会被锁定为1。
            // "difficultyClass": 2025, -> 实际：1

            "checkCondition": {
                "checkWhat": "globaltag",

                // 标签ID，必须是GlobalTags.json中存在的标签ID。
                // 不要留空或删除，或者填写错误的标签ID，否则将会报错，并使得检定结果默认为“未激活”。
                // 此处代表需要检测“let_master_notice_mouse”标签是否被激活。（见GlobalTags.json）
                // 请注意此处是 stringId 而非 tagId，这个字段将会和针对 tech 的检定类型共用。
                // 注意大小写。
                // 应用场景：检测玩家在此前游戏中曾做出的选择，从而影响当前剧情走向。
                "stringId": "let_master_notice_mouse" 
            }
            // 成功和失败跳转不再赘述，请参考上上一个语句示例。实际写作中不要忘记这个部分！
        },



        {
            // 多重检定语句句型，用于让玩家进行多次检定。
            "type": "multicheck",

            // 多重检定的所有检定条件。
            // 每一个检定条件的字段和单次检定中的“checkCondition”字段完全相同，请参考其规则（第133行）。
            // 检定条件的排列顺序就是它们所对应的序号，从 1 开始。
            "multiCheckConditions": [
                { // 这是检定1
                    "difficultyClass": 5,
                    "checkWhat": "diceroll"
                    // 在同一个多重检定语句中，同一个掷骰检定只会进行一次，之后的所有结果都会拿该掷骰检定结果进行判断。
                },
                { // 这是检定2
                    "difficultyClass": 8,
                    "checkWhat": "money"
                },
                { // 这是检定3
                    "checkWhat": "tech",
                    "stringId": "story_2"
                },
                { // 这是检定4
                    "checkWhat": "globaltag",
                    "stringId": "did_bad_things"
                }
            ],
            
            // 这个多重检定的所有结果情况。
            "multiCheckTargets": [
                {
                    // 结果优先级，当多个结果被同时满足时，更高优先级的结果会被选择。
                    // 例如：目前玩家已经通过的检定既符合好结局标准，又符合普通结局标准；但如果好结局的优先级更高，则最终会导向好结局。
                    // 必须是整数，不带引号。格式错误会导致文件无法正常加载。
                    // 留空或删除时，默认为0。
                    // 允许负优先级，但不建议。
                    "priority": 1,

                    // 达成该结果所需要通过的检定列表。
                    // 例如，此处含义为：如果想要使“好结局”成立，玩家需要满足1、2和3号检定。    
                    // 即，同时满足：通过一个 dc = 5 的掷骰检定，金钱不少于8，并已解锁“摘星台”科技（见 TechTree.json）
                    // 这个结果不会检查未写在列表里的检定，其它未写到的检定通过与否不会直接影响到这个结果是否成立。
                    // 必须写成整数列表的形式，格式错误会导致文件无法载入。
                    // 如果列表中包含超出选项个数的数字（例如在此处，5）则它会被忽略。
                    // 即，此处 [-1,1,2,3,5] 等价于 [1,2,3]。
                    // 不过尽量别写错。
                    "requiredConditionIndices": [1,2,3],

                    // 当该结果被选择——即，在满足条件的所有结果中优先级最高,则会跳转到该ID所对应的语句。
                    // 留空、删除或填写错误会报错，并以顺序播放替代。
                    "targetID": "good_end"
                },
                {
                    // 这是结果优先级的一个使用案例：
                    // 如果4号检定（即，tag "did_bad_things" 被通过），则无论其它检定是否通过、和其它两个结局是否成立，由于“坏结局”肯定在能够成立的结局里拥有最高的优先级，“坏结局”会被最终选择。
                    // 也许还有其他有趣用法。
                    "priority": 2,
                    "requiredConditionIndices": [4],
                    "targetID": "bad_end"
                },
                {
                    // "requiredConditionIndices" 字段可以被留空或删除。
                    // 若如此做，则视为这个结局不需要通过任何检定就可以成立。
                    // 为了安全性，请尽量设置一个低优先级、且无条件的结果，作为默认结果。（普通结局之类的）
                    // 如果不如此做，且检定遇到了没有符合条件结果的情况，则会报错并进行顺序播放以代替。
                    "priority": 0,
                    "targetID": "normal_end"
                }
            ]
        },



        // 以下是关于语句触发效果的演示。
        // 其效果为：播放此语句时，对应的影响将会被施加给游戏，例如奖励金钱，道具，或启用全局标签等。
        {
            "type": "default",
            "text": "掌门给了你一块钱。",

            "effects": [ // 可以有多个影响，它们会依次触发。
                {
                    // 是否将影响内容输出到事件页面，并进行播放。
                    // 显示效果示例：获得了2个灵石。
                    // 默认为true。设置为false以隐藏效果描述，适合在某些事件中，根据玩家的选择暗中调整故事发展的脉络。（可以使用GlobalTags）
                    // 布尔型不带引号。
                    "showOutput": true,

                    // 影响的类型。
                    // 接受以下类型：
                    // money - 增加或扣除玩家金钱
                    // disciple - 增加或扣除玩家弟子，例如用于后期献祭事件。
                    // globalTag - 开启或关闭全局标签。注意大小写。
                    // item - 添加或扣除道具。
                    // 未知的类型会被忽略，不造成影响。
                    "type": "money",

                    // 影响的数值规模。
                    // 对于金钱、弟子和道具生效。特定类型下无效的该字段会被忽略。
                    // 必须是不带括号的正整数。
                    "intValue": 1,

                    // 影响的字符串信息。
                    // 对于全局标签和道具生效。特定类型下无效的该字段会被忽略。
                    "stringValue": "", // 此处无效，可以删除

                    // 影响的具体操作。
                    // 仅接受 "+" 和 "-" 。
                    // "+" 表示增加金钱、道具、弟子或开启全局标签，"-"反之。
                    "operation": "+"

                    // 最终结果：你获得1块钱。
                }
            ]
        },

        // 特殊地，当effect的字段为以下情况：
        // "type": "disciple"
        // "intValue": 0
        // "operation": "-"
        // 这个影响将会被视为献祭。
        // 这将摧毁分配到该事件上的所有弟子骰子。
        {
            "id": "sacrifice_assigned_disciples", // 可选的，仅用于在示例中标示

            "text": "你献祭了你的弟子，但这一切真的值得吗？",
            "effects": [
                {
                    "type": "disciple",
                    "intValue": 0,
                    "operation": "-"
                },
                {
                    "type": "money",
                    "intValue": 20,
                    "operation": "+"
                },
                {
                    "type": "globalTag", //注意大小写
                    "stringValue": "embrace_cthulhu",
                    "operation": "+"
                }
            ]            
        }
    ]
}